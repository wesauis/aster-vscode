// @ts-check
import defineTheme from "../lib/theme.js";
import colors from "../lib/colors.js";

const _ = (name, foreground, scopes) => ({
  name,
  scope: scopes,
  settings: { foreground },
});

defineTheme("aster", {
  name: "Aster",
  type: "dark",
  colors: {
    "editorBracketMatch.background": colors.none,
    "editorBracketMatch.border": colors.grayYellow,
    foreground: colors.foreground,
    focusBorder: colors.surfaceYellow,
    "titleBar.activeBackground": colors.panel,
    "titleBar.inactiveBackground": colors.panel,
    "activityBar.background": colors.panel,
    "tab.inactiveBackground": colors.panel,
    "sideBar.background": colors.panel,
    "editor.background": colors.black,
    "editor.foreground": colors.white,
    "activityBar.foreground": colors.yellow,
    "activityBar.inactiveForeground": colors.brightBlack,
    "activityBar.activeBorder": colors.none,
    "input.background": colors.black,
    "inputOption.activeForeground": colors.yellow,
    "inputOption.activeBackground": colors.none,
    "inputOption.hoverBackground": colors.none,
    "dropdown.background": colors.black,
    "textLink.foreground": colors.yellow,
    "editorGroupHeader.tabsBackground": colors.panel,
    "editorWidget.background": colors.panel,
    "editorWidget.border": colors.dimYellow,
    "dropdown.listBackground": colors.panel,
    "activityBarBadge.background": colors.yellow,
    "activityBarBadge.foreground": colors.black,
    "statusBar.background": colors.panel,
    "editorIndentGuide.background": colors.none,
    "editorIndentGuide.activeBackground": colors.grayYellow,
  },
  semanticHighlighting: true,
  semanticTokenColors: {
    "variable.readonly": colors.red,
  },
  tokenColors: [
    _("Boolean", colors.yellow, [
      "constant.language.boolean",
      "constant.language.json",
    ]),
    _("Comment", colors.brightBlack, ["comment"]),
    _("Constant", colors.red, ["support.constant"]),
    _("Function", colors.brightBlue, [
      "entity.name.function",
      "meta.method",
      "support.function",
    ]),
    _("Keyword", colors.yellow, [
      "entity.name.tag.css",
      "keyword",
      "keyword.operator.navigation",
      "meta.function storage.type.function",
      "punctuation.accessor",
      "punctuation.definition.entity",
      "punctuation.definition.structure",
      "storage.modifier",
      "storage.type.class",
      "storage.type.trait",
      "support.constant.font-name",
      "support.constant.property-value",
    ]),
    _("Keyword - Other", colors.pink, [
      "entity.other.attribute-name.id",
      "keyword.control.at-rule.import",
      "keyword.control.export",
      "keyword.control.flow",
      "keyword.control.import",
      "keyword.other.data-integrity",
      "keyword.other.DDL.create.II",
      "keyword.other.namespace",
      "keyword.other.unit",
      "keyword.other.use",
      "keyword.operator.star",
      "keyword.operator",
      "meta.var.expr storage.type",
      "storage.modifier.async",
      "storage.type.function",
    ]),
    _("Modifier", colors.pink, [
      "storage.modifier.access-control",
      "storage.type.annotation",
    ]),
    _("Number", colors.purple, ["constant.numeric"]),
    _("Property", colors.red, [
      "entity.name.tag.yaml",
      "entity.other.attribute-name",
      "keyword.other.definition.ini",
      "support.type.property-name",
      "support.variable.property",
      "variable.object.property",
      "variable.other.object.property",
      "variable.other.property",
    ]),
    _("Punctuation - Dimmed", colors.brightBlack, [
      "keyword.operator.assignment",
      "meta.brace",
      "meta.definition.method",
      "meta.definition.method.signature",
      "meta.method.body",
      "punctuation.definition",
      "punctuation.definition.method-parameters",
      "punctuation.definition.string",
      "punctuation.section.array",
      "punctuation.section.function.begin",
      "punctuation.section.property-list",
      "punctuation.separator",
      "punctuation.separator.key-value",
      "punctuation.support.type.property-name",
      "punctuation.terminator",
      "source.groovy meta.definition.variable",
    ]),
    _("Punctuation - Important", colors.yellow, ["punctuation.definition.tag"]),
    _("String", colors.green, ["string"]),
    _("Text", colors.white, [
      "comment support.other.namespace",
      "meta.method-call",
      "meta.method.body",
    ]),
    _("Type", colors.cyan, [
      "entity.name",
      "entity.other.attribute-name.class",
      "meta.method.return-type",
      "storage.type",
      "support.class",
    ]),
    _("Variable", colors.white, ["meta.definition.variable.name", "variable"]),
  ],
});
